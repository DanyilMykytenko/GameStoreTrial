// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(GameStoreDbContext))]
    partial class GameStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Basket");
                });

            modelBuilder.Entity("Data.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ParentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Data.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discontinued")
                        .HasColumnType("int");

                    b.Property<string>("FromMongo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.Property<short>("UnitInStock")
                        .HasColumnType("smallint");

                    b.Property<int>("Viewed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Data.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FromMongo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isPaid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Data.Entities.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BasketId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Data.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("Data.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromMongo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Data.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B",
                            ConcurrencyStamp = "0c2741c1-eb83-46e7-bdb5-bfad8ea6c620",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "C2972C01-B621-4D34-9A53-0072FFBC8784",
                            ConcurrencyStamp = "781f98c5-ac60-4170-97e8-df1ce1e94af3",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = "F3C74A98-0709-4467-9A14-7EB18950725D",
                            ConcurrencyStamp = "b2d2f6db-e743-42a4-8797-a247ba2356ee",
                            Name = "Moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = "FE5A4BC6-A366-4AF3-8188-6F4300DAA5A6",
                            ConcurrencyStamp = "93de26b0-f108-4558-b8fc-129d90b3d4d6",
                            Name = "Publisher",
                            NormalizedName = "PUBLISHER"
                        },
                        new
                        {
                            Id = "4CEDE834-14E8-4392-8DC7-ABA9E4DD4B71",
                            ConcurrencyStamp = "0433f32d-5d8d-4ce9-82ae-b35a6b55a97f",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "54DCC2BB-0145-441B-B148-5EB18A9BC34B",
                            ConcurrencyStamp = "e498b4e9-a4c1-4e47-b5ba-bbb4fe795b4f",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        },
                        new
                        {
                            Id = "CF121BD7-1C28-4B3C-9103-9BF06F61D349",
                            ConcurrencyStamp = "032ab1a9-e71d-4e6d-80a9-9770d86abb45",
                            Name = "SuperAdministrator",
                            NormalizedName = "SUPERADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformsId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "PlatformsId");

                    b.HasIndex("PlatformsId");

                    b.ToTable("GamePlatform");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "permission",
                            ClaimValue = "role.create",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "permission",
                            ClaimValue = "role.update",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "permission",
                            ClaimValue = "role.delete",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "permission",
                            ClaimValue = "role.get",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "permission",
                            ClaimValue = "role.permission.get",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "permission",
                            ClaimValue = "user.create",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "permission",
                            ClaimValue = "user.update",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "permission",
                            ClaimValue = "user.delete",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "permission",
                            ClaimValue = "user.get",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "permission",
                            ClaimValue = "comment.create",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "permission",
                            ClaimValue = "comment.delete",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "permission",
                            ClaimValue = "comment.get",
                            RoleId = "CD712C58-B6AF-4881-92BD-4D1B2F7A171B"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "permission",
                            ClaimValue = "game.create",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "permission",
                            ClaimValue = "game.update",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "permission",
                            ClaimValue = "game.delete",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "permission",
                            ClaimValue = "game.get",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "permission",
                            ClaimValue = "genre.create",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "permission",
                            ClaimValue = "genre.update",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 19,
                            ClaimType = "permission",
                            ClaimValue = "genre.delete",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 20,
                            ClaimType = "permission",
                            ClaimValue = "genre.get",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 21,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.create",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 22,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.update",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 23,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.delete",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 24,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.get",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 25,
                            ClaimType = "permission",
                            ClaimValue = "publisher.create",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 26,
                            ClaimType = "permission",
                            ClaimValue = "publisher.update",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 27,
                            ClaimType = "permission",
                            ClaimValue = "publisher.delete",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 28,
                            ClaimType = "permission",
                            ClaimValue = "publisher.get",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 29,
                            ClaimType = "permission",
                            ClaimValue = "order.create",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 30,
                            ClaimType = "permission",
                            ClaimValue = "order.get",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 31,
                            ClaimType = "permission",
                            ClaimValue = "order.update",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 32,
                            ClaimType = "permission",
                            ClaimValue = "order.details.update",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 33,
                            ClaimType = "permission",
                            ClaimValue = "order.details.delete",
                            RoleId = "C2972C01-B621-4D34-9A53-0072FFBC8784"
                        },
                        new
                        {
                            Id = 34,
                            ClaimType = "permission",
                            ClaimValue = "comment.create",
                            RoleId = "F3C74A98-0709-4467-9A14-7EB18950725D"
                        },
                        new
                        {
                            Id = 35,
                            ClaimType = "permission",
                            ClaimValue = "comment.delete",
                            RoleId = "F3C74A98-0709-4467-9A14-7EB18950725D"
                        },
                        new
                        {
                            Id = 36,
                            ClaimType = "permission",
                            ClaimValue = "comment.get",
                            RoleId = "F3C74A98-0709-4467-9A14-7EB18950725D"
                        },
                        new
                        {
                            Id = 37,
                            ClaimType = "permission",
                            ClaimValue = "order.get",
                            RoleId = "F3C74A98-0709-4467-9A14-7EB18950725D"
                        },
                        new
                        {
                            Id = 38,
                            ClaimType = "permission",
                            ClaimValue = "game.get",
                            RoleId = "F3C74A98-0709-4467-9A14-7EB18950725D"
                        },
                        new
                        {
                            Id = 39,
                            ClaimType = "permission",
                            ClaimValue = "genre.get",
                            RoleId = "F3C74A98-0709-4467-9A14-7EB18950725D"
                        },
                        new
                        {
                            Id = 40,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.get",
                            RoleId = "F3C74A98-0709-4467-9A14-7EB18950725D"
                        },
                        new
                        {
                            Id = 41,
                            ClaimType = "permission",
                            ClaimValue = "publisher.get",
                            RoleId = "F3C74A98-0709-4467-9A14-7EB18950725D"
                        },
                        new
                        {
                            Id = 42,
                            ClaimType = "permission",
                            ClaimValue = "comment.get",
                            RoleId = "4CEDE834-14E8-4392-8DC7-ABA9E4DD4B71"
                        },
                        new
                        {
                            Id = 43,
                            ClaimType = "permission",
                            ClaimValue = "order.get",
                            RoleId = "4CEDE834-14E8-4392-8DC7-ABA9E4DD4B71"
                        },
                        new
                        {
                            Id = 44,
                            ClaimType = "permission",
                            ClaimValue = "game.get",
                            RoleId = "4CEDE834-14E8-4392-8DC7-ABA9E4DD4B71"
                        },
                        new
                        {
                            Id = 45,
                            ClaimType = "permission",
                            ClaimValue = "genre.get",
                            RoleId = "4CEDE834-14E8-4392-8DC7-ABA9E4DD4B71"
                        },
                        new
                        {
                            Id = 46,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.get",
                            RoleId = "4CEDE834-14E8-4392-8DC7-ABA9E4DD4B71"
                        },
                        new
                        {
                            Id = 47,
                            ClaimType = "permission",
                            ClaimValue = "publisher.get",
                            RoleId = "4CEDE834-14E8-4392-8DC7-ABA9E4DD4B71"
                        },
                        new
                        {
                            Id = 48,
                            ClaimType = "permission",
                            ClaimValue = "comment.create",
                            RoleId = "4CEDE834-14E8-4392-8DC7-ABA9E4DD4B71"
                        },
                        new
                        {
                            Id = 49,
                            ClaimType = "permission",
                            ClaimValue = "comment.create",
                            RoleId = "54DCC2BB-0145-441B-B148-5EB18A9BC34B"
                        },
                        new
                        {
                            Id = 50,
                            ClaimType = "permission",
                            ClaimValue = "comment.get",
                            RoleId = "54DCC2BB-0145-441B-B148-5EB18A9BC34B"
                        },
                        new
                        {
                            Id = 51,
                            ClaimType = "permission",
                            ClaimValue = "game.get",
                            RoleId = "54DCC2BB-0145-441B-B148-5EB18A9BC34B"
                        },
                        new
                        {
                            Id = 52,
                            ClaimType = "permission",
                            ClaimValue = "genre.get",
                            RoleId = "54DCC2BB-0145-441B-B148-5EB18A9BC34B"
                        },
                        new
                        {
                            Id = 53,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.get",
                            RoleId = "54DCC2BB-0145-441B-B148-5EB18A9BC34B"
                        },
                        new
                        {
                            Id = 54,
                            ClaimType = "permission",
                            ClaimValue = "publisher.get",
                            RoleId = "54DCC2BB-0145-441B-B148-5EB18A9BC34B"
                        },
                        new
                        {
                            Id = 55,
                            ClaimType = "permission",
                            ClaimValue = "comment.create",
                            RoleId = "FE5A4BC6-A366-4AF3-8188-6F4300DAA5A6"
                        },
                        new
                        {
                            Id = 56,
                            ClaimType = "permission",
                            ClaimValue = "comment.get",
                            RoleId = "FE5A4BC6-A366-4AF3-8188-6F4300DAA5A6"
                        },
                        new
                        {
                            Id = 57,
                            ClaimType = "permission",
                            ClaimValue = "order.get",
                            RoleId = "FE5A4BC6-A366-4AF3-8188-6F4300DAA5A6"
                        },
                        new
                        {
                            Id = 58,
                            ClaimType = "permission",
                            ClaimValue = "game.get",
                            RoleId = "FE5A4BC6-A366-4AF3-8188-6F4300DAA5A6"
                        },
                        new
                        {
                            Id = 59,
                            ClaimType = "permission",
                            ClaimValue = "genre.get",
                            RoleId = "FE5A4BC6-A366-4AF3-8188-6F4300DAA5A6"
                        },
                        new
                        {
                            Id = 60,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.get",
                            RoleId = "FE5A4BC6-A366-4AF3-8188-6F4300DAA5A6"
                        },
                        new
                        {
                            Id = 61,
                            ClaimType = "permission",
                            ClaimValue = "publisher.get",
                            RoleId = "FE5A4BC6-A366-4AF3-8188-6F4300DAA5A6"
                        },
                        new
                        {
                            Id = 62,
                            ClaimType = "permission",
                            ClaimValue = "order.create",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 63,
                            ClaimType = "permission",
                            ClaimValue = "order.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 64,
                            ClaimType = "permission",
                            ClaimValue = "order.update",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 65,
                            ClaimType = "permission",
                            ClaimValue = "order.details.update",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 66,
                            ClaimType = "permission",
                            ClaimValue = "order.details.delete",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 67,
                            ClaimType = "permission",
                            ClaimValue = "comment.create",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 68,
                            ClaimType = "permission",
                            ClaimValue = "comment.delete",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 69,
                            ClaimType = "permission",
                            ClaimValue = "comment.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 70,
                            ClaimType = "permission",
                            ClaimValue = "game.create",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 71,
                            ClaimType = "permission",
                            ClaimValue = "game.update",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 72,
                            ClaimType = "permission",
                            ClaimValue = "game.delete",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 73,
                            ClaimType = "permission",
                            ClaimValue = "game.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 74,
                            ClaimType = "permission",
                            ClaimValue = "genre.create",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 75,
                            ClaimType = "permission",
                            ClaimValue = "genre.update",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 76,
                            ClaimType = "permission",
                            ClaimValue = "genre.delete",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 77,
                            ClaimType = "permission",
                            ClaimValue = "genre.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 78,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.create",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 79,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.update",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 80,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.delete",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 81,
                            ClaimType = "permission",
                            ClaimValue = "platformtype.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 82,
                            ClaimType = "permission",
                            ClaimValue = "publisher.create",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 83,
                            ClaimType = "permission",
                            ClaimValue = "publisher.update",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 84,
                            ClaimType = "permission",
                            ClaimValue = "publisher.delete",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 85,
                            ClaimType = "permission",
                            ClaimValue = "publisher.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 86,
                            ClaimType = "permission",
                            ClaimValue = "role.create",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 87,
                            ClaimType = "permission",
                            ClaimValue = "role.update",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 88,
                            ClaimType = "permission",
                            ClaimValue = "role.delete",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 89,
                            ClaimType = "permission",
                            ClaimValue = "role.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 90,
                            ClaimType = "permission",
                            ClaimValue = "role.permission.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 91,
                            ClaimType = "permission",
                            ClaimValue = "user.create",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 92,
                            ClaimType = "permission",
                            ClaimValue = "user.update",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 93,
                            ClaimType = "permission",
                            ClaimValue = "user.delete",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        },
                        new
                        {
                            Id = 94,
                            ClaimType = "permission",
                            ClaimValue = "user.get",
                            RoleId = "CF121BD7-1C28-4B3C-9103-9BF06F61D349"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Entities.Comment", b =>
                {
                    b.HasOne("Data.Entities.Game", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("GameId");

                    b.HasOne("Data.Entities.Comment", "Parent")
                        .WithMany("Nested")
                        .HasForeignKey("ParentId");

                    b.Navigation("Game");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Data.Entities.Game", b =>
                {
                    b.HasOne("Data.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Data.Entities.Genre", b =>
                {
                    b.HasOne("Data.Entities.Genre", "Parent")
                        .WithMany("Nested")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Data.Entities.OrderDetails", b =>
                {
                    b.HasOne("Data.Entities.Basket", null)
                        .WithMany("Details")
                        .HasForeignKey("BasketId");

                    b.HasOne("Data.Entities.Order", null)
                        .WithMany("Details")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.HasOne("Data.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.HasOne("Data.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Platform", null)
                        .WithMany()
                        .HasForeignKey("PlatformsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Data.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Basket", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Data.Entities.Comment", b =>
                {
                    b.Navigation("Nested");
                });

            modelBuilder.Entity("Data.Entities.Game", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Data.Entities.Genre", b =>
                {
                    b.Navigation("Nested");
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("Data.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
